[
  {
    "objectID": "about/about.html#introduction",
    "href": "about/about.html#introduction",
    "title": "About",
    "section": "Introduction",
    "text": "Introduction\nThis site has been done and been mantaining with four tools and several content sources:"
  },
  {
    "objectID": "about/about.html#tools",
    "href": "about/about.html#tools",
    "title": "About",
    "section": "Tools",
    "text": "Tools\n\nBasic tools\nQuarto is an open-source scientific and technical publishing system built on Pandoc. To learn more about Quarto websites visit quarto.org.\nMarkdown is a lightweight markup language that is used to format text in a way that is easy to read and write. It is commonly used on the web to format blog posts and other types of content.\nVisualCode is an integrated development environment (IDE) that is used to write and debug code.\nGitHub Pages is a service offered by the popular version control platform GitHub. It allows users to create and host websites using the files that are stored in their GitHub repositories. It can be used to create personal, organization, or project-based websites.\n\n\nGit\nGit is a version control system that is used for tracking changes to files, such as source code or documents. It is commonly used by software developers to manage their codebase, but it can also be used for other types of files.\nGit allows users to create a repository, which is a collection of files that are managed by Git. Each time a change is made to a file in the repository, Git records the change in a new version of the file. This allows users to easily undo changes, compare different versions of a file, and collaborate with others on the same files.\nGit also provides tools for managing and merging changes made by different users. This makes it possible for multiple people to work on the same files at the same time without overwriting each other‚Äôs changes.\nOverall, Git is a powerful and widely-used tool that is essential for anyone working on large or complex projects with multiple collaborators. It allows users to easily track, manage, and share changes to their files, making it easier to develop and maintain software projects."
  },
  {
    "objectID": "about/about.html#install-tools",
    "href": "about/about.html#install-tools",
    "title": "About",
    "section": "Install tools",
    "text": "Install tools\nIf you want to use VisualCode and GitHub together, you can follow these steps:\n\nInstall VisualCode on your computer.\nCreate a new project in VisualCode by selecting ‚ÄúFile > New Project‚Äù from the menu.\nInitialize a Git repository in your project by opening the terminal in VisualCode and running the git init command.\nUse VisualCode to write and save your code files in the project directory.\nStage and commit your changes to the Git repository using the git add and git commit commands.\nCreate a new repository on GitHub and follow the instructions to push your local repository to the remote repository on GitHub.\n\nOnce your code is on GitHub, you can use GitHub Pages to create a website for your project. To do this, follow these steps:\n\nOpen the repository on GitHub and go to the ‚ÄúSettings‚Äù tab.\nScroll down to the ‚ÄúGitHub Pages‚Äù section and select the ‚Äúmaster branch‚Äù as the source for your website.\nGitHub will automatically build and publish your website, and it will provide a URL where you can view it.\n\n\n\n\n\n\n\nBe careful: these instructions are just a general overview\n\n\n\n\n\nNote that these instructions are just a general overview of how to use VisualCode and GitHub together. There are many other features and options that you can use to customize your workflow. For more detailed information, you can consult the documentation for VisualCode and GitHub."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home",
    "section": "",
    "text": "üìò Developer skills summary\n\nAlgorithmic, OOP, COP\nArchitecture in mind - Systems Design\nControl Version Systems\nDevOps\nSCRUM\nThis wiki is focused in Web App development and the skills set needed. Nowadays a developer (not a coder) must have this skills set:"
  },
  {
    "objectID": "index.html#what-is-a-programmer-2022-openai",
    "href": "index.html#what-is-a-programmer-2022-openai",
    "title": "Home",
    "section": "What is a programmer (2022 OpenAI)",
    "text": "What is a programmer (2022 OpenAI)\nA programmer, also known as a software developer, needs a wide range of skills in order to be successful in their role. Some of the most important skills for a programmer include:\n\nStrong problem-solving skills: A programmer needs to be able to analyze complex problems and develop effective solutions using code. Logical thinking: Programming involves creating logical structures and processes that a computer can follow, so a programmer needs to have strong logical and analytical skills.\nKnowledge of programming languages and technologies: A programmer needs to have a deep understanding of the programming languages and technologies that they use, as well as the ability to learn new languages and technologies as needed.\nAttention to detail: Programming involves working with complex systems and large amounts of data, so a programmer needs to have a keen eye for detail and the ability to spot errors and inconsistencies.\nCommunication skills: A programmer often works as part of a team, so they need to be able to communicate effectively with other developers and stakeholders.\nTime management and organizational skills: A programmer typically has multiple tasks and deadlines to manage, so they need to be able to prioritize their work and stay organized.\n\nIn addition to these core skills, a programmer may also benefit from having knowledge of software development methodologies, such as Agile or Waterfall, as well as experience with version control systems and other tools commonly used in software development."
  },
  {
    "objectID": "index.html#how-can-we-get-it",
    "href": "index.html#how-can-we-get-it",
    "title": "Home",
    "section": "How can we get it?",
    "text": "How can we get it?\nTo be a good programmer, you need to have a strong foundation in computer science and software development principles, as well as the ability to learn and adapt to new technologies and languages. Some specific ways that you can improve your skills as a programmer include:\n\nPractice regularly: The best way to improve your programming skills is to write code regularly and work on a variety of projects. This will help you develop your problem-solving skills and build your knowledge of different languages and technologies.\nLearn from others: There are many resources available online, such as tutorials, blogs, and forums, where you can learn from experienced programmers and ask questions. You can also learn by working on open-source projects and collaborating with other developers.\nStay up-to-date: The field of software development is constantly evolving, so it is important to stay up-to-date with the latest technologies and best practices. This can help you stay ahead of the curve and keep your skills relevant.\nTake on new challenges: To continue growing as a programmer, you should strive to take on new and challenging projects that push you to learn and improve. This can help you develop new skills and broaden your expertise.\nSeek feedback: It can be helpful to seek feedback from experienced programmers, mentors, or peers on your work. This can help you identify areas for improvement and learn from others who have more experience.\n\nIn general, being a good programmer requires a combination of technical skills, problem-solving abilities, and a willingness to learn and grow. By focusing on these areas and continually striving to improve, you can become a successful and effective programmer."
  },
  {
    "objectID": "index.html#and-reading-books",
    "href": "index.html#and-reading-books",
    "title": "Home",
    "section": "And reading books?",
    "text": "And reading books?\nReading books can help improve your skills as a programmer in several ways. Some specific benefits of reading books for programmers include:\n\nExpanding your knowledge: Books can provide a wealth of information on a wide range of topics related to programming. By reading books, you can learn about new technologies, programming languages, and best practices that you may not have been aware of before.\nImproving your problem-solving skills: Many books on programming include examples and exercises that you can use to practice your problem-solving skills. By working through these exercises, you can improve your ability to analyze complex problems and develop effective solutions using code.\nBroadening your perspective: Reading books written by other programmers can provide valuable insights into how they approach problems and solve them. This can help you learn new techniques and strategies that you can apply to your own work.\nBuilding your vocabulary: Many technical books on programming include specialized terminology and concepts that you may not be familiar with. By reading these books, you can expand your vocabulary and become more fluent in the language of programming.\nStaying up-to-date: Reading books can help you keep up with the latest trends and developments in the field of software development. This can help you stay ahead of the curve and ensure that your skills remain relevant and in-demand.\n\nOverall, reading books can be a valuable way to improve your skills as a programmer. By reading books written by experienced programmers, you can learn new techniques and strategies, expand your knowledge, and stay up-to-date with the latest developments in the field."
  },
  {
    "objectID": "java/java.html",
    "href": "java/java.html",
    "title": "Java",
    "section": "",
    "text": "üìò ¬øQue es Java?\n\nJava es un lenguaje de programaci√≥n basado en clases y orientado a objetos, dise√±ado para tener la menor cantidad de dependencias de implementaci√≥n posibles.\nSu objetivo es, permitir que los desarrolladores de aplicaciones escriban el c√≥digo una sola vez y que ese c√≥digo pueda se ejecutado en cualquier lugar, esto es lo que denominan WORA (Write once, run anywhere? / Escribe una vez, corre en cualquier lugar).\nEsto significa que el c√≥digo compilado de Java puede ejecutarse en cualquier plataforma que admita Java sin la necesidad de volver a ser compilado.\nAdem√°s, una vez que Java es combinado junto a otras muchas tecnolog√≠as como Spring, node js, Android, Hadoop, J2EE, etc. nos permite crear aplicaciones completas, robustas, escalables, port√°tiles y distribuidas. Java tambi√©n promueve la integraci√≥n continua y el control del c√≥digo, a trav√©s de pruebas unitarias, utilizando herramientas como Selenium.\n¬øCu√°l es la historia de Java?\nEl creador de Java es James Gosling. Gosling desarroll√≥ originalmente Java con sus compa√±eros de Sun Microsystems a principios de la d√©cada de 1990. Inicialmente, el proyecto fue llamado ‚ÄòOak‚Äô y estaba formado por implementaciones similares a C y C ++. El nombre de Java, fue seleccionado m√°s tarde, tras una lluvia de ideas y es el nombre de un grano de caf√© cultivado en la isla de Java, en Indonesia. Java 1.0, la primera versi√≥n fue lanzada en 1995 con el lema de WORA. M√°s tarde, Oracle adquiri√≥ Sun Microsystems, y a partir de ah√≠; no ha habido vuelta atr√°s. La √∫ltima versi√≥n de Java es Java 14 lanzada en Marzo de 2020.\n¬ø¬øCu√°les son las caracter√≠sticas de Java??\nJava ofrece muchas caracter√≠sticas atractivas:\nUn lenguaje independiente de la plataforma. Una amplia biblioteca est√°ndar que facilita la codificaci√≥n. Puede crear una aplicaci√≥n independiente completa utilizando Java. Java admite la asignaci√≥n autom√°tica de memoria y la desasignaci√≥n (llamada recolecci√≥n de basura). Ofrece un gran rendimiento ya que Java admite multiproceso y concurrencia, lo que lo convierte en un lenguaje altamente interactivo y receptivo. Seguro y simple.\n¬ø¬øCu√°les son las caracter√≠sticas de Java??\nHay tres componentes principales de Java: JVM, JDK y JRE. JDK o Java Development Kit es donde los desarrolladores escriben su c√≥digo y lo ejecutan a trav√©s de JRE o Java Runtime Environment.\n¬øC√≥mo se traduce el c√≥digo? Eso es a trav√©s de la m√°quina virtual Java (JVM). Con JVM, cualquier c√≥digo escrito en Java (o en cualquier otro idioma) se puede traducir al c√≥digo de bytes de Java. Cualquier m√°quina puede implementar este c√≥digo basado en el sistema operativo. JVM reside dentro del JRE junto con los paquetes java (bibliotecas).\n\nJDK: Herramientas de desarrollo JRE + como int√©rprete (cargador de clases), compilador (javac), archivos jar (paquete y archivo) y javadocs.\nJVM: La m√°quina abstracta donde se ejecutan los bytecodes de Java. Consiste en un documento de especificaci√≥n que describe la implementaci√≥n de JVM, el programa de implementaci√≥n real y la instancia de JVM (tiempo de ejecuci√≥n) donde puede ejecutar su programa principal.\nJRE: Implementaci√≥n f√≠sica (instancia de tiempo de ejecuci√≥n) de JVM. Contiene los paquetes de la biblioteca y los archivos de soporte que JVM usa para ejecutar un programa."
  },
  {
    "objectID": "quarto/quarto.html",
    "href": "quarto/quarto.html",
    "title": "Quarto",
    "section": "",
    "text": "Quarto Markdown es una forma de agregar formatos como encabezados, negritas, cursivas, listas‚Ä¶ a un texto sin formato. En principio se cre√≥ como una alternativa a HTML m√°s simple, y que gente sin mucho conocimiento de este lenguaje de programaci√≥n pudiese crear p√°ginas web. Pero con el tiempo, se convirti√≥ en un sistema de escritura minimalista con el que poder escribir sin muchas preocupaciones, y que puede ser exportados a otros sitios con facilidad.\nAl tener una sintaxis m√°s simple que HTML, es mucho m√°s sencillo de aprender. No hay que preocuparse por ir abriendo y cerrando tags. Y como no tiene los t√≠picos men√∫s contextuales de los editores de texto cl√°sicos, se puede escribir en un entorno con menos distracciones. Ideal para aquellos que pasan mucho de su tiempo escribiendo textos.\n\n\nSi escribes habitualmente para alg√∫n sitio web, ya sea en tu sitio personal o un medio period√≠stico, por ejemplo, Markdown es un gran aliado. Pero no solo eso. Aqu√≠ tienes algunas de las cosas que podr√°s hacer con Markdown:\n\nEscribir emails con un formato determinado, y no tener que hacerlo dentro de la aplicaci√≥n de correo.\nCrear listas To-Do, ya que cualquier programa especializado en esta tarea lee este tipo de archivos.\nCrear y organizar notas.\n\nY , por supuesto, poder escribir en una web sin tener conocimientos de HTML. Desde el punto de vista de la productividad, quarto es muy √∫til porque se centra en lo importante: la escritura.Una vez aprendas a usarlo, podr√°s dar formato a tus textos sin tener que tocar el rat√≥n. No tendr√°s que separar nunca m√°s las manos del teclado.\n\n\nOJS code cells {ojs} behave a bit differently than cells in traditional notebooks, and have many options available to control their display and layout.\nObservable is a platform for publishing and sharing interactive data-driven documents, an online editor for composing, cells are executed in a sequence, with outputs being generated and displayed as part of the notebook, changes made to cells can be re-executed, updated in real-time.\n\n\n\nlink\n\n\nheight = 250\nnumbers = Float64Array.from({length: 1000}, d3.randomNormal())\nimport {chart as histogram} with {numbers as data, height} from \"@d3/histogram@261\"\nhistogram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLo que sigue no es un listado exhaustivo de la ]sintaxis de Quarto. En muchos casos, se puede conseguir un efecto particular usando diferentes estilos de sintaxis.\nLos caracteres que ser√≠an interpretados por quarto como comandos de formateado se interpretan literalmente si se precede por una barra invertida; por ejemplo la secuencia ‚Äò*‚Äô mostrar√≠a un asterisco en lugar de empezar una secci√≥n de texto enfatizado. Un bloque de HTML crudo no se ver√° alterado por quarto, pero los comandos de quarto insertados dentro de un elemento de bloque de HTML crudo no ser√°n procesados.\n1. Saltos de l√≠nea: Los saltos de l√≠nea se generan cuando se encuentran dos espacios juntos, ejemplo:\n‚ÄúQuien fue a Santiago,\nperdi√≥ su clase de redes‚Äù\n2. Encabezados: Los encabezados se generan cuando se encuentra una almohadilla antes de texto, ejemplo:"
  },
  {
    "objectID": "quarto/quarto.html#h2",
    "href": "quarto/quarto.html#h2",
    "title": "Quarto",
    "section": "h2",
    "text": "h2\n\nh3\n\nh4\n\nh5\n\nh6\n3. Citas: Para citar solo es necesario escribir una cu√±a antes del texto, ejemplo:\n\nLa vida es muy corta para aprender alem√°n. -Tad Marburg\n\n4. Texto con √©nfasis: Agregar un asterisco para cursiva y dos para negrita, ejemplo:\n\n√©nfasis (cursiva)\n√©nfasis fuerte (negrita)\n\n5. C√≥digo: Se utiliza el acento grave para identificar c√≥digo, y corchetes para identificar el lenguaje de programaci√≥n, ejemplo:\nC√≥digo\nC√≥digo en \nvarias l√≠neas\n6. Listas:\n\nUn elemento en una lista no ordenada\nOtro elemento en una lista\n\n\nElemento en una lista enumerada u ordenada.\nOtro elemento\n\n7. Enlaces:\nEnlace en Quarto\n8. Im√°genes:\n![(img/elephant.png){width=‚Äú40%‚Äù}}\n\n9. Table:\n\ntables\ntablesgenerator\n\n#| tables\n| Default | Left | Right | Center |\n|---------|:-----|------:|:------:|\n| 12      | 12   |    12 |   12   |\n| 123     | 123  |   123 |  123   |\n| 1       | 1    |     1 |   1    |\n: Demonstration of pipe table syntax\n: Callouts looks {tbl-colwidths=\"[20,85]\"}\n11. Callouts:\n::: {.callout-note}\nNote that there are five types of callouts, including:\n`note`, `warning`, `important`, `tip`, and `caution`.\n:::\n::: {.callout-tip}\n## Tip With Caption\nThis is an example of a callout with a caption.\n:::\n::: {.callout-caution collapse=\"true\"}\n## Expand To Learn About Collapse\nThis is an example of a 'folded' caution callout that can be expanded by the user.\nYou can use `collapse=\"true\"` to collapse it by default or `collapse=\"false\"` to make \na collapsible callout that is expanded by default.\n:::\ncallouts\n\n\n\n\n\n\nPay Attention\n\n\n\nUsing callouts is an effective way to highlight content that your reader give special consideration or attention.\n\n\n\n\n\n\n\n\nTip\n\n\n\n\n\n\n\n\n\n\n\n\n\n12. Mermaid:\nMermaid is a Javascript based diagramming and charting tool that uses Markdown-inspired text definitions and a renderer to create and modify complex diagrams.\nAbove we demonstrated a flowchart created with Mermaid, here is a sequence diagram (also embedded using a {mermaid} executable cell):\nFor example, here we embed a flowchart created using Mermaid:\n{mermaid} flowchart LR A[Hard edge] ‚Äì> B(Round edge) B ‚Äì> C{Decision} C ‚Äì> D[Result one] C ‚Äì> E[Result two]\n\n\n\n\nflowchart LR\n  A[Hard edge] --> B(Round edge)\n  B --> C{Decision}\n  C --> D[Result one]\n  C --> E[Result two]\n\n\n\n\n\n13. Listing-Table:\nListings enable you to automatically generate the contents of a page (or region of a page) from a list of Quarto documents or other custom data. You can enable listings on a page using the listing option in the document front matter, for example:"
  },
  {
    "objectID": "react/react.html",
    "href": "react/react.html",
    "title": "React",
    "section": "",
    "text": "¬øQue es React?\n\n\nQu√© es React y los motivos por los que es una estupenda alternativa para el desarrollo de interfaces de usuario, o aplicaciones web completas del lado del cliente.\n\nReact es una librer√≠a Javascript focalizada en el desarrollo de interfaces de usuario. As√≠ se define la propia librer√≠a y evidentemente, esa es su principal √°rea de trabajo. Sin embargo, lo cierto es que en React encontramos un excelente aliado para hacer todo tipo de aplicaciones web, SPA (Single Page Application) o incluso aplicaciones para m√≥viles. Para ello, alrededor de React existe un completo ecosistema de m√≥dulos, herramientas y componentes capaces de ayudar al desarrollador a cubrir objetivos avanzados con relativamente poco esfuerzo.\nPor tanto, React representa una base s√≥lida sobre la cual se puede construir casi cualquier cosa con Javascript. Adem√°s facilita mucho el desarrollo, ya que nos ofrece muchas cosas ya listas, en las que no necesitamos invertir tiempo de trabajo.\n\n¬øCu√°l es el objetivo de React?\nSirve para desarrollar aplicaciones web de una manera m√°s ordenada y con menos c√≥digo que si usas Javascript puro o librer√≠as como jQuery centradas en la manipulaci√≥n del DOM. Permite que las vistas se asocien con los datos, de modo que si cambian los datos, tambi√©n cambian las vistas.\nEl c√≥digo spaguetti que se suele producir mediante librer√≠as como jQuery se pretende arquitecturizar y el modo de conseguirlo es a trav√©s de componentes. Una interfaz de usuario es b√°sicamente creada a partir de un componente, el cual encapsula el funcionamiento y la presentaci√≥n. Unos componentes se basan adem√°s en otros para solucionar necesidades m√°s complejas en aplicaciones. Tambi√©n permite crear otras piezas de aplicaci√≥n c√≥modamente, como los test."
  },
  {
    "objectID": "scrum/scrum.html#el-proceso",
    "href": "scrum/scrum.html#el-proceso",
    "title": "Scrum",
    "section": "El proceso",
    "text": "El proceso\nEn Scrum un proyecto se ejecuta en ciclos temporales cortos y de duraci√≥n fija(iteraciones que normalmente son de 2 semanas, aunque en algunos equipos son de 3 y hasta 4 semanas, l√≠mite m√°ximo de feedback de producto real y reflexi√≥n). Cada iteraci√≥n tiene que proporcionar un resultado completo, un incremento de producto final que sea susceptible de ser entregado con el m√≠nimo esfuerzo al cliente cuando lo solicite."
  },
  {
    "objectID": "vocabulary/vocabulary.html",
    "href": "vocabulary/vocabulary.html",
    "title": "Vocabulario",
    "section": "",
    "text": "Iterar: Repetir un proceso con mejoras y un time-box determinado.\nPique: Iteraciones cortas con un limite de tiempo en Scrum, generalmente de 2 a 4 semanas.\nObjetivo de carrera: Un objetivo claro para el sprint a lograr.\nAcumulaci√≥n de sprint: Una lista priorizada de elementos en los que se trabajar√° durante el sprint.\nPlanificaci√≥n de p√≥quer: Una t√©cnica de estimaci√≥n basada en consenso utilizada en Scrum con esta serie para ponderar tareas: 1,2,3,5,8,13,21.\nDue√±o del producto: Una persona responsable de la cartera de productos y sus prioridades, enlace al cliente."
  }
]